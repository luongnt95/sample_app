continue
FollowingRelationship.where(user_id: id).pluck(:followed_id)
continue
FollowingRelationship.where(user_id: id).pluck(:followed_id)
following_ids
continue
current_user.following_ids
current_user.methods.sort
current_user.methods
current_user.methods.include? :followeds
current_user.methods.include? :followed_id
current_user.methods.include? :followed_ids
continue
exit
continue
@relationship.followed_id
@relationship
continue
render
continue
@relationship
continue
@relationship
continue
log ("hello")
console.log("hello")
$
$(this)
$this
continue
$("#follow_form").html
$("#follow_form")
$(
continue
relationship.delete
continue
user = User.find(params[:id]).microposts
continue
User.includes(:microposts).find(params[:id]).microposts
continue
User.includes(:microposts).find(params[:id]).microposts
continue
user = User.find(params[:id]).microposts
continue
User.includes(:microposts).find(params[:id]).microposts
continue
user = User.find(params[:id]).microposts
continue
User.includes(:microposts).find(params[:id]).microposts
continue
user = User.find(params[:id]).microposts
continue
user = User.find(params[:id]).microposts
continue
user = User.find(params[:id]).microposts
@user.microposts
@user
continue
user
@user
continue
@user.microposts
@user
continue
@user
continue
@user.microposts
@user = User.includes(:microposts).find_by(id: params[:id])
@user = User.find(params[:id]).includes(:microposts)
User.find_by(id: params[:id]).includes(:microposts)
continue
FollowingRelationship.find_by(user_id: 1, followed_id: followed.id).delete
followed = FollowingRelationship.find_by(id: params[:id]).followed
continue
FollowingRelationship.find_by(id: params[:id]).delete
FollowingRelationship.find_by(id: params[:id])
continue
FollowingRelationship.find_by(id: params[:id])
FollowingRelationship.find_by(id: )
FollowingRelationship.find_by(id: params[:id])
FollowingRelationship.find_by(user_id: 1, followed_id: followed.id)
FollowingRelationship.find_by(user_id: 1, followed_id: 2)
FollowingRelationship.find_by(user_id: 1, followed_id: followed.id)
followed = FollowingRelationship.find_by(id: params[:id]).followed
FollowingRelationship.find_by(user_id: 1, followed_id: 5)
FollowingRelationship.find_by(user_id: 1, followed_id: 4)
FollowingRelationship.find_by(user_id: 1, followed_id: params[:id])
FollowingRelationship.find_by(user_id: 1, followed_id: 4)
continue
FollowingRelationship.find_by(user_id: 1, followed_id: 2)
FollowingRelationship.find_by_user_id_followed_id(1, 3)
FollowingRelationship.delete(params[:id]) == true
FollowingRelationship.delete(params[:id]) == false
FollowingRelationship.delete(params[:id])
continue
User.destroy(2)
User.delete(2)
current_user.following_relationships.find_by(followed_id: FollowingRelationship.find_by(id: params[:id]).followed.id).delete
continue
FollowingRelationship.find_by(id: params[:id]).delete
continue
FollowingRelationship.find_by(id: params[:id]).delete
user1.following.all
user1 = User.first
following_relationships.find_by(followed_id: followed_id)
continue
following_relationships.find_by(followed_id: followed_id)
continue
current_user.find_relationship(params[:id]).delete_all
current_user.find_relationship(params[:id]).delete
current_user.find_relationship params[:id]
current_user.unfollow params[:id]
params[:id]
params[:id[
current_user
continue
"#{@relationship.followed_id}"
#{@relationship.followed_id}
@relationship.followed_id
@relationship
continue
build_user
continue
user_params
User.new nil
build_user
continue
params[:id]
continue
redirect_to root_url
continue
current_user.following.find_by id: 4
current_user.following
current_user.follow_by_id params[:followed_id]
params[:followed_id]
params[:followed_id[
continue
a.id
a
a = current_user.find_followed_by_id @user.id
a
continue
params[:id]
continue
a.followed_id
a = current_user.find_followed_by_id @user.id
current_user.find_followed_by_id @user.id.followed_id
current_user.find_followed_by_id @user.id
@user.id
continue
@user.followings
@user.followings.size
@user.followings.count
@user.followings
@user.following
@user.followings
@user
continue
@micropost
continue
micropost_params
continue
@micropost
continue
@micropost
continue
@micropost
continue
current_user.microposts
current_user.microposts.size
u
continue
u.microposts.size
m = u.microposts
u = current_user
continue
@microposts.find 2
@microposts.find 1
@microposts
exit
current_user
continue
options
continue
options
continue
options
continue
options
continue
options
continue
options
continue
options
continue
options
continue
options.alt.nil?
options['alt'].nil?
options
continue
options
image_tag gravatar_url, options
options
continue
options
continue
image_tag gravatar_url, options
options
continue
options
continue
options
options.merge! alt: user.name, class: "gravatar"
options
continue
remember_token.instance?
remember_token.class
a.equal?c
a == c
c = "1"
b = "1"
a = "1"
a = 
a == c
b
b = remember_token
c = remember_token
a.equal? remember_token
a.equal?remember_token
a == remember_token
b = remember_token
remember_token
self.remember_token
b = remember_token
a = self.remember_token
@@remember_token
@remember_token
remember_token
self.remember_token
self.remember_token = User.new_token
self.remember_token = self.new_token
remember_token
continue
user
User.find_by(id: 123).nil?
User.find_by(id: 123)
User.try(:find, 123).nil?
User.try(:find, 123)
user.nil?
unless user
user
continue
@current_user
continue
